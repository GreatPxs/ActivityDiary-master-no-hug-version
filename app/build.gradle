/*
 * ActivityDiary
 *
 * Copyright (C) 2017-2021 Raphael Mack http://www.raphael-mack.de
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
plugins {
    id("com.android.application")
//    id("com.github.triplet.play")
}

if (project.file('../ActivityDiarySigning.properties').exists()) {
    apply plugin: 'com.github.triplet.play'

    Properties props = new Properties()
    props.load(new FileInputStream(file('../ActivityDiarySigning.properties')))

    android {
        signingConfigs {
            gplayRelease {
                storeFile file("${System.properties['user.home']}${File.separator}/.android_keystore")
                storePassword props['keystore.password']
                keyAlias 'key0'
                keyPassword props['key.password']
            }
//            release {
//                storeFile file("${System.properties['user.home']}${File.separator}/.android_keystore_default")
//                storePassword props['keystore_default.password']
//                keyAlias 'defaultRelease'
//                keyPassword  props['key_default.password']
//            }
//        }
//        playAccountConfigs {
//            defaultAccountConfig {
//                serviceAccountEmail = 'gplay-ramack@api-5226730847504381805-103625.iam.gserviceaccount.com'
//                pk12File = file('../gplay-developer-9607db552238.p12')
//            }
        }
    }
    play {
        serviceAccountCredentials.set(file("../api-5226730847504381805-103625-85f8cc97d608.json"))
//        uploadImages = true
//        untrackOld = true
//        track = 'beta'
    }
}

android {
    compileSdkVersion 34
    defaultConfig {
        applicationId "de.rampro.activitydiary"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        setProperty("archivesBaseName", "ActivityDiary-" + defaultConfig.versionName)
        if (project.file('../ActivityDiarySigning.properties').exists()) {
//            playAccountConfig = playAccountConfigs.defaultAccountConfig
        }
    }
    buildFeatures {
        buildConfig true
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        rcTest {
            // to be used to create screenshots and alike
//            signingConfig signingConfigs.release
            applicationIdSuffix ".test"
            versionNameSuffix "-test"
//            shrinkResources true
        }
        release {
//            signingConfig signingConfigs.release
//            minifyEnabled false
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        gplayRelease {
//            minifyEnabled false
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.file('../ActivityDiarySigning.properties').exists()) {
                signingConfig signingConfigs.gplayRelease
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
    }

    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.4"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    dataBinding {
        enabled = true
    }
    namespace 'de.rampro.activitydiary'
     buildFeatures {
        viewBinding true
    } 
}
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

dependencies {
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.20"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'com.pes.materialcolorpicker:library:1.2.2'
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation 'androidx.test:monitor:1.6.1'
    implementation 'com.bytedesk:libcore:2.8.0'
    implementation("com.google.ai.client.generativeai:generativeai:0.1.1")
    implementation("androidx.core:core-ktx:1.9.0")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2")
    implementation("androidx.activity:activity-compose:1.8.1")
    implementation("androidx.navigation:navigation-compose:2.7.5")

    implementation(platform("androidx.compose:compose-bom:2023.10.01"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation("io.coil-kt:coil-compose:2.5.0")
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation files('lib\\QWeather_Public_Android_V4.17.jar')
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    androidTestImplementation(platform("androidx.compose:compose-bom:2023.03.00"))
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    implementation("com.google.ai.client.generativeai:generativeai:0.1.1")

    implementation("io.coil-kt:coil-compose:2.5.0")

    def acraVersion = '5.9.6'
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-core:$acraVersion"
    implementation "ch.acra:acra-dialog:$acraVersion"
    implementation "ch.acra:acra-toast:$acraVersion"

    implementation 'com.squareup.picasso:picasso:2.8'
    implementation 'org.osmdroid:osmdroid-android:6.1.11'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    // Don't forget to add attribution in strings.xml/libraries and README.md if you add something here

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation "org.robolectric:robolectric:4.3"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
}

